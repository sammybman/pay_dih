000100110531      //*
000200110531      //*****  PROGRAMMER - SAMUEL BIRKETT
000300940810     H DFTNAME(CTIME)
000301110531     H bnddir('DISDIR') dftactgrp(*no) actgrp(*new)
000400960415     FKRON04D   CF   E             WORKSTN
000500960415     FKRONCF    UF A E           K DISK
000600980205     Fkempml3   IF   E           K DISK
000700110531      // General/Payroll PROTOTYPES
000800110531      /copy qcpysrc,genPR
000900110531      //
001000960415     D                SDS
001100960415     D  @PGM             *PROC
001200110531      //
001300020617     D arr             S             40    dim(1) ctdata perrcd(1)
001400110531
001401110531     D*--------------------------------------------------
001402110531     D* Procedure name: aainit
001403110531     D* Purpose:
001404110531     D* Returns:
001405110531     D*--------------------------------------------------
001406110531     D aainit          PR
001407110531
001408110531     D*--------------------------------------------------
001409110531     D* Procedure name: deleteIt
001410110531     D* Purpose:
001411110531     D* Returns:
001412110531     D*--------------------------------------------------
001413110531     D deleteIt        PR
001414110531
001415110531     D*--------------------------------------------------
001416110531     D* Procedure name: add
001417110531     D* Purpose:
001418110531     D* Returns:
001419110531     D*--------------------------------------------------
001420110531     D add             PR
001421110531
001422110531     D*--------------------------------------------------
001423110531     D* Program name: getClassInfo
001424110531     D* Purpose:
001425110531     D* Returns:
001426110531     D* Parameter:      className
001427110531     D* Parameter:      classID
001428110531     D*--------------------------------------------------
001429110531     D getClassInfo    PR                  EXTPGM('KRON05R')
001430110531     D  className                    15A
001431110531     D  classID                       3P 0
001432110531
001433110531
001437110531
001438110531
001439110531
001600110531      //
001701110531      /FREE
001702110531        dow 0 = 0;
001703110531
001704110531        aainit();
001800110531         EXFMT KROND1;
001900110531                     if *in03;
001901110531                       *inlr = *on;
001902110531                       return;
001903110531                     ENDIF;
002100110531          IF *IN01 = '1';
002101110531                 getClassInfo(kclass:kclassid);
002102110531                  iter;
002400110531         eNDIF;
002500110531       //
002501110531      /END-FREE
002600960415     C                   MOVE      '0'           *IN
003101110531      /FREE
003102110531         select;
003103110531           when aed = 'A';
003104110531             add();
003105110531           when aed = 'D';
003106110531           deleteIt();
003107110531         ENDSL;
003108110531            enddo;
003200110531
004801110531      /END-FREE
004900110531
004901110531     P*--------------------------------------------------
004902110531     P* Procedure name: aainit
004903110531     P* Purpose:
004904110531     P* Returns:
004905110531     P*--------------------------------------------------
004906110531     P aainit          B
004907110531     D aainit          PI
004908110531
004909110531
004910110531      /FREE
004911110531            coname = get_coname;
004912110531        @DATE = get_sys_date();
004913110531                    @title = arr(1);
004914110531
004919110531      /END-FREE
004920110531     P aainit          E
004921110531
004922110531     P*--------------------------------------------------
004923110531     P* Procedure name: deleteIt
004924110531     P* Purpose:
004925110531     P* Returns:
004926110531     P*--------------------------------------------------
004927110531     P deleteIt        B
004928110531     D deleteIt        PI
004929110531
004930110531
004931110531      /FREE
004932110531
004933110531            CHAIN KCLASS KEREC;
004934110531         *IN07 = NOT %FOUND;
004935110531         if not *in07;
004936110531           *in77 = *on;
004938110531         ENDIF;
004939110531         CHAIN KCLASS KCPREC;
004940110531         IF %found();
004941110531           DELETE KCPREC;
004942110531                kclass = ' ';
004943110531         ENDIF;
004944110531
004945110531      /END-FREE
004946110531     P deleteIt        E
004947110531
004948110531     P*--------------------------------------------------
004949110531     P* Procedure name: add
004950110531     P* Purpose:
004951110531     P* Returns:
004952110531     P*--------------------------------------------------
004953110531     P add             B
004954110531     D add             PI
004955110531
004956110531
004957110531      /FREE
004958110531
004959110531           WRITE(E) KCPREC;
004960110531         *IN05 = %ERROR;
004961110531                kclass = ' ';
004962110531
004963110531      /END-FREE
004964110531     P add             E
004965110531**
005000110531     Kronos Master File Maintenance
